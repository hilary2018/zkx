input{
    
beats{
	    type => "ssllog"
        port => 5044
    }
beats{
	    type => "shangqi"
        port => 5055
    }

 kafka{
 bootstrap_servers=>"192.168.72.71:9091,192.168.72.71:9092,192.168.72.71:9093"
 topics=>["kafka_es_test1"]
 client_id => "logstash_137_local"
 group_id=>"logstash_test_local"
 consumer_threads =>1
 type => "kafka_local"
 }

  kafka{
 bootstrap_servers=>"192.168.72.19:6667,,192.168.72.44:6667,192.168.72.15:6667"
 topics=>["topictest2_result"]
 client_id => "logstash_137"
 group_id=>"logstash_test"
 consumer_threads =>2
 type => "kafkaserver"
 codec => json {
            charset => "UTF-8"
        }
 }
 
#  kafka{
# bootstrap_servers=>"192.168.72.83:9092"
# topics=>["mao01"]
# client_id => "logstash_162_mao"
# group_id=>"logstash_mao"
# consumer_threads =>1
# type => "kafkamao"
#  }
 
}
#过滤access日志
filter {
  if ([type] == "ssllog") {
  #定义数据的格式
  #    match => { "message" => "\[%{HTTPDATE:requesttime}\] %{DATA:Clint_IP} %{DATA:SSL} %{DATA:Algorithm} \"%{DATA:request}\" %{DATA:SoapAction} %{NUMBER:ResponseCode} %{NUMBER:ResponseSize}" } 
  grok {

	 match => { "message" => "\[%{HTTPDATE:requesttime}\] %{DATA:Client_IP} %{DATA:SSL} %{DATA:Algorithm} \"%{DATA:RequestURI}\" %{NUMBER:RespCode} %{NUMBER:Resp_Size} %{NUMBER:Duration_Time}" }
        
		remove_field => "message"
        remove_field => "host"
		remove_field => "@version"
		remove_field => "path"
        remove_field => "SSL"
		remove_field => "Algorithm"
        remove_field => "prospector"
		remove_field => "offset"
		remove_field => "beat"
		remove_field => "tags"
		remove_field => "input"	
  }
#         match => ["requesttime", "dd/MMM/yyyy:HH:mm:ss.SSS +0800"]
  date {

		 match => ["requesttime", "dd/MMM/yyyy:HH:mm:ss +0100"]
         target => "@timestamp"
      }
	  
}
#过滤shangqikafka日志
 else if ( [type] == "kafkaserver" ) {
   json {
            source => "message"
            target => "message"
        }
 #    date {

		# match => ["Time", "yyyy-MM-dd HH:mm:ss"]
		# match => ["pt", "yyyyMMdd"]
       #  target => "@timestamp"
   #   }
} 

#过滤shangqi日志
 else if ( [type] == "kafka_local" ) {
     csv{    separator => ","
	              columns => ["VIN","Time"]
			      remove_field => "message"
	   }
} 

else {
        drop {}
   }

}

output {

   if ( [type] == "ssllog" ) {
       elasticsearch { hosts => ["192.168.1.45:9200","192.168.1.36:9200"]
  index => "bes_apachessllog"
  #  user => "elastic"
  #  password => "123456"
        }
     }

   else if ([type] == "kafkaserver2") {
        elasticsearch { hosts => ["192.168.1.45:9200","192.168.1.36:9200"]
    #index => "kafka_speedtest"
	index =>  "kafka_shangqi-%{+YYYY.MM.dd}"
      #user => "elastic"
      #password => "123456"
        }
    }
 
   else {
  
    stdout{}
  
  }

}



